;Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
;By starting with 1 and 2, the first 10 terms will be:
;1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;Find the sum of all the even-valued terms in the sequence which do not exceed four million.

(define (fib)              ;[fib]
    (define (iter a b cnt)
      (if (> a 4000000)
        cnt      
        (if (= (modulo a 2) 0)
               (iter b (+ a b) (+ cnt a))
               (iter b (+ a b) cnt))))
    (iter 1 2 0))
   
(define (fib1 n word)             ;(fib1 4000000 'even)
  (define (iter a b cnt)
    (if (> a n)
        cnt
        (if (eq? word 'even)
            (if (= (modulo a 2) 0)
                (iter b (+ a b) (+ cnt a))
                (iter b (+ a b) cnt))
            (if (= (modulo a 2) 0)
                (iter b (+ a b) cnt)
                (iter b (+ a b) (+ cnt a))))))
  (iter 1 2 0))

(define fib2                                       
  (lambda (n word)                         ;(fib2 4000000 'even)
    (define iter
      (lambda (a b cnte cnto)              ;cnte- count-even ; cnto- count-odd 
        (cond ((> a n)
               (cond ((eq? word 'even) cnte)
                     (else cnto)))              
               ((cond ((= (modulo a 2) 0)
                      (iter b (+ a b) (+ cnte a) cnto))
                     (else (iter b (+ a b) cnte (+ cnto a))))))))
    (iter 1 2 0 0)))

;4613732
          
        
                